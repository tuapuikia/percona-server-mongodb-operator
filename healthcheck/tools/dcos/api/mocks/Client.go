// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import api "github.com/percona/percona-server-mongodb-operator/healthcheck/tools/dcos/api"
import mock "github.com/stretchr/testify/mock"
import pod "github.com/percona/percona-server-mongodb-operator/healthcheck/pkg/pod"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Endpoints provides a mock function with given fields:
func (_m *Client) Endpoints() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEndpoint provides a mock function with given fields: endpointName
func (_m *Client) GetEndpoint(endpointName string) (*api.Endpoint, error) {
	ret := _m.Called(endpointName)

	var r0 *api.Endpoint
	if rf, ok := ret.Get(0).(func(string) *api.Endpoint); ok {
		r0 = rf(endpointName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.Endpoint)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(endpointName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTasks provides a mock function with given fields: podName
func (_m *Client) GetTasks(podName string) ([]pod.Task, error) {
	ret := _m.Called(podName)

	var r0 []pod.Task
	if rf, ok := ret.Get(0).(func(string) []pod.Task); ok {
		r0 = rf(podName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]pod.Task)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(podName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Name provides a mock function with given fields:
func (_m *Client) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Pods provides a mock function with given fields:
func (_m *Client) Pods() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// URL provides a mock function with given fields:
func (_m *Client) URL() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
